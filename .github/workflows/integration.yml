name: Integration Tests

on:
  pull_request:
  schedule:
    - cron: '17 6 * * *'

jobs:
  integration:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Install deps
        run: yarn install

      - name: Clone and build agoric-sdk
        run: |
          git clone --depth 1 --branch dev-upgrade-17 https://github.com/Agoric/agoric-sdk.git
          cd agoric-sdk
          yarn install
          yarn build
          yarn link-cli
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Build dapp-ertp-airdrop
        run: yarn build

      - name: Setup Starship Infrastructure
        id: starship-infra
        uses: hyperweb-io/starship-action@0.5.9
        with:
          # uses ghcr.io/agoric/agoric-sdk:dev image (latest master)
          config: ./e2e-testing/config.yaml
          timeout: 30m
          namespace: agoric-multichain
  
      - name: Forward port and provision Pool
        run: |
          kubectl config set-context --current --namespace=agoric-multichain
          kubectl get pods
          make port-forward
          make fund-provision-pool
        working-directory: ./e2e-testing

      - name: Ensure ports are forwarded
        run: |
          curl --fail --retry 3 --retry-delay 10 http://localhost:26657/status || (echo "agoriclocal node is available")
          curl --fail --retry 3 --retry-delay 10 http://localhost:8081/chains/agoriclocal || (echo "agoriclocal URL check failed")
          curl --fail --retry 3 --retry-delay 10 http://localhost:8081/chains/osmosislocal || (echo "osmosislocal URL check failed")
          curl --fail --retry 3 --retry-delay 10 http://localhost:8081/chains/gaialocal || (echo "gaialocal URL check failed")

      - name: Override Chain Registry
        run: make override-chain-registry
        working-directory: ./e2e-testing

      - name: Run Integration Test
        run: yarn integration-test

      - name: Capture and print agoric validator logs
        if: always()
        run: kubectl logs agoriclocal-genesis-0 --container=validator || true

      - name: Capture and print agoric-osmosis relayer logs
        if: always()
        run: kubectl logs hermes-agoric-osmosis-0 --container=relayer || true

      - name: Capture and print agoric-gaia relayer logs
        if: always()
        run: kubectl logs hermes-agoric-gaia-0 --container=relayer || true

      - name: verify contract(s) started onchain
        run: |
          curl http://localhost:1317/agoric/vstorage/data/published.agoricNames.instance | grep tribblesAirdrop
